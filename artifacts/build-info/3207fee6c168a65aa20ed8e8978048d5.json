{
	"id": "3207fee6c168a65aa20ed8e8978048d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"operators.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >0.5.0 <= 0.9.0;\r\n\r\ncontract local{\r\n    int public a;\r\n   function getA()  public view returns(bool){ \r\n       bool b;\r\n       bool c;\r\n       bool d;\r\n       bool e;\r\n       bool f;\r\n       bool g;\r\n       bool h;\r\n       b = a < 2;\r\n       c = 4 <= 4;\r\n       g = 4 != 7;\r\n       h = 4 >= 4;\r\n       \r\n   }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"operators.sol": {
				"local": {
					"abi": [
						{
							"inputs": [],
							"name": "a",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getA",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"operators.sol\":75:367  contract local{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"operators.sol\":75:367  contract local{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0dbe671f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd46300fd\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"operators.sol\":96:108  int public a */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"operators.sol\":114:364  function getA()  public view returns(bool){ \r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"operators.sol\":96:108  int public a */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"operators.sol\":114:364  function getA()  public view returns(bool){ \r... */\n    tag_10:\n        /* \"operators.sol\":151:155  bool */\n      0x00\n        /* \"operators.sol\":167:173  bool b */\n      dup1\n        /* \"operators.sol\":183:189  bool c */\n      0x00\n        /* \"operators.sol\":199:205  bool d */\n      dup1\n        /* \"operators.sol\":215:221  bool e */\n      0x00\n        /* \"operators.sol\":231:237  bool f */\n      dup1\n        /* \"operators.sol\":247:253  bool g */\n      0x00\n        /* \"operators.sol\":263:269  bool h */\n      dup1\n        /* \"operators.sol\":287:288  2 */\n      0x02\n        /* \"operators.sol\":283:284  a */\n      sload(0x00)\n        /* \"operators.sol\":283:288  a < 2 */\n      slt\n        /* \"operators.sol\":279:288  b = a < 2 */\n      swap7\n      pop\n        /* \"operators.sol\":307:308  4 */\n      0x04\n        /* \"operators.sol\":302:303  4 */\n      dup1\n        /* \"operators.sol\":302:308  4 <= 4 */\n      gt\n      iszero\n        /* \"operators.sol\":298:308  c = 4 <= 4 */\n      swap6\n      pop\n        /* \"operators.sol\":327:328  7 */\n      0x07\n        /* \"operators.sol\":322:323  4 */\n      0x04\n        /* \"operators.sol\":322:328  4 != 7 */\n      eq\n      iszero\n        /* \"operators.sol\":318:328  g = 4 != 7 */\n      swap2\n      pop\n        /* \"operators.sol\":347:348  4 */\n      0x04\n        /* \"operators.sol\":342:343  4 */\n      dup1\n        /* \"operators.sol\":342:348  4 >= 4 */\n      lt\n      iszero\n        /* \"operators.sol\":338:348  h = 4 >= 4 */\n      swap1\n      pop\n        /* \"operators.sol\":156:364  { \r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"operators.sol\":114:364  function getA()  public view returns(bool){ \r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_15:\n        /* \"#utility.yul\":88:109   */\n      tag_17\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:237   */\n    tag_19:\n        /* \"#utility.yul\":207:230   */\n      tag_21\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":207:230   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":202:205   */\n      dup3\n        /* \"#utility.yul\":195:231   */\n      mstore\n        /* \"#utility.yul\":122:237   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":243:453   */\n    tag_12:\n        /* \"#utility.yul\":330:334   */\n      0x00\n        /* \"#utility.yul\":368:370   */\n      0x20\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":353:371   */\n      add\n        /* \"#utility.yul\":345:371   */\n      swap1\n      pop\n        /* \"#utility.yul\":381:446   */\n      tag_24\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":432:441   */\n      dup4\n        /* \"#utility.yul\":428:445   */\n      add\n        /* \"#utility.yul\":419:425   */\n      dup5\n        /* \"#utility.yul\":381:446   */\n      tag_15\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":243:453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":459:677   */\n    tag_8:\n        /* \"#utility.yul\":550:554   */\n      0x00\n        /* \"#utility.yul\":588:590   */\n      0x20\n        /* \"#utility.yul\":577:586   */\n      dup3\n        /* \"#utility.yul\":573:591   */\n      add\n        /* \"#utility.yul\":565:591   */\n      swap1\n      pop\n        /* \"#utility.yul\":601:670   */\n      tag_26\n        /* \"#utility.yul\":667:668   */\n      0x00\n        /* \"#utility.yul\":656:665   */\n      dup4\n        /* \"#utility.yul\":652:669   */\n      add\n        /* \"#utility.yul\":643:649   */\n      dup5\n        /* \"#utility.yul\":601:670   */\n      tag_19\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":459:677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":683:773   */\n    tag_18:\n        /* \"#utility.yul\":717:724   */\n      0x00\n        /* \"#utility.yul\":760:765   */\n      dup2\n        /* \"#utility.yul\":753:766   */\n      iszero\n        /* \"#utility.yul\":746:767   */\n      iszero\n        /* \"#utility.yul\":735:767   */\n      swap1\n      pop\n        /* \"#utility.yul\":683:773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":779:855   */\n    tag_22:\n        /* \"#utility.yul\":815:822   */\n      0x00\n        /* \"#utility.yul\":844:849   */\n      dup2\n        /* \"#utility.yul\":833:849   */\n      swap1\n      pop\n        /* \"#utility.yul\":779:855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6dc000a35811fa2e0ca35596d070c8e7294a9bb679211bbb1c4aac1bb70807764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610151806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630dbe671f1461003b578063d46300fd14610059575b600080fd5b610043610077565b60405161005091906100ea565b60405180910390f35b61006161007d565b60405161006e91906100cf565b60405180910390f35b60005481565b6000806000806000806000806002600054129650600480111595506007600414159150600480101590505050505050505090565b6100ba81610105565b82525050565b6100c981610111565b82525050565b60006020820190506100e460008301846100b1565b92915050565b60006020820190506100ff60008301846100c0565b92915050565b60008115159050919050565b600081905091905056fea2646970667358221220d6dc000a35811fa2e0ca35596d070c8e7294a9bb679211bbb1c4aac1bb70807764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD SLT SWAP7 POP PUSH1 0x4 DUP1 GT ISZERO SWAP6 POP PUSH1 0x7 PUSH1 0x4 EQ ISZERO SWAP2 POP PUSH1 0x4 DUP1 LT ISZERO SWAP1 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xBA DUP2 PUSH2 0x105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0x111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDC STOP EXP CALLDATALOAD DUP2 0x1F LOG2 0xE0 0xCA CALLDATALOAD MSIZE PUSH14 0x70C8E7294A9BB679211BBB1C4AA 0xC1 0xBB PUSH17 0x807764736F6C6343000807003300000000 ",
							"sourceMap": "75:292:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@a_3": {
									"entryPoint": 119,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getA_54": {
									"entryPoint": 125,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:858:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "185:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "202:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "224:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "207:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "207:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "173:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													}
												],
												"src": "122:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "335:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "443:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "381:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "307:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "319:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "330:4:1",
														"type": ""
													}
												],
												"src": "243:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "555:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "565:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "643:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "667:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "601:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "527:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "539:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "550:4:1",
														"type": ""
													}
												],
												"src": "459:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "725:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "735:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "753:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "735:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "707:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "717:7:1",
														"type": ""
													}
												],
												"src": "683:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "833:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "844:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "833:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"src": "779:76:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80630dbe671f1461003b578063d46300fd14610059575b600080fd5b610043610077565b60405161005091906100ea565b60405180910390f35b61006161007d565b60405161006e91906100cf565b60405180910390f35b60005481565b6000806000806000806000806002600054129650600480111595506007600414159150600480101590505050505050505090565b6100ba81610105565b82525050565b6100c981610111565b82525050565b60006020820190506100e460008301846100b1565b92915050565b60006020820190506100ff60008301846100c0565b92915050565b60008115159050919050565b600081905091905056fea2646970667358221220d6dc000a35811fa2e0ca35596d070c8e7294a9bb679211bbb1c4aac1bb70807764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBE671F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD46300FD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SLOAD SLT SWAP7 POP PUSH1 0x4 DUP1 GT ISZERO SWAP6 POP PUSH1 0x7 PUSH1 0x4 EQ ISZERO SWAP2 POP PUSH1 0x4 DUP1 LT ISZERO SWAP1 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xBA DUP2 PUSH2 0x105 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC9 DUP2 PUSH2 0x111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDC STOP EXP CALLDATALOAD DUP2 0x1F LOG2 0xE0 0xCA CALLDATALOAD MSIZE PUSH14 0x70C8E7294A9BB679211BBB1C4AA 0xC1 0xBB PUSH17 0x807764736F6C6343000807003300000000 ",
							"sourceMap": "75:292:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;96:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;114:250;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;96:12;;;;:::o;114:250::-;151:4;167:6;183;199;215;231;247;263;287:1;283;;:5;279:9;;307:1;302;:6;;298:10;;327:1;322;:6;;318:10;;347:1;342;:6;;338:10;;156:208;;;;;;;114:250;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:115::-;207:23;224:5;207:23;:::i;:::-;202:3;195:36;122:115;;:::o;243:210::-;330:4;368:2;357:9;353:18;345:26;;381:65;443:1;432:9;428:17;419:6;381:65;:::i;:::-;243:210;;;;:::o;459:218::-;550:4;588:2;577:9;573:18;565:26;;601:69;667:1;656:9;652:17;643:6;601:69;:::i;:::-;459:218;;;;:::o;683:90::-;717:7;760:5;753:13;746:21;735:32;;683:90;;;:::o;779:76::-;815:7;844:5;833:16;;779:76;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67400",
								"executionCost": "117",
								"totalCost": "67517"
							},
							"external": {
								"a()": "2407",
								"getA()": "2535"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 75,
									"end": 367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 75,
									"end": 367,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6dc000a35811fa2e0ca35596d070c8e7294a9bb679211bbb1c4aac1bb70807764736f6c63430008070033",
									".code": [
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "DBE671F"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "D46300FD"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75,
											"end": 367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75,
											"end": 367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 96,
											"end": 108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 215,
											"end": 221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 279,
											"end": 288,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 279,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 308,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 302,
											"end": 308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 298,
											"end": 308,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 298,
											"end": 308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 327,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 322,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 318,
											"end": 328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 347,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 342,
											"end": 348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 338,
											"end": 348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 114,
											"end": 364,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 122,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 195,
											"end": 231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 243,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 381,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 428,
											"end": 445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 381,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 381,
											"end": 446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 381,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 243,
											"end": 453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 243,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 459,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 573,
											"end": 591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 565,
											"end": 591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 601,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 667,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 601,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 601,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 459,
											"end": 677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 459,
											"end": 677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 459,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 459,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 459,
											"end": 677,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 683,
											"end": 773,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 683,
											"end": 773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 753,
											"end": 766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 746,
											"end": 767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 735,
											"end": 767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 735,
											"end": 767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 773,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 779,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 779,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 833,
											"end": 849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 833,
											"end": 849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 779,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 779,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"a()": "0dbe671f",
							"getA()": "d46300fd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"operators.sol\":\"local\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"operators.sol\":{\"keccak256\":\"0xa73ce7aa68f1e12c035c4711cb005acf75d6e0481596f288af166b58f00e7da4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://935cf4cde1a93a1c81ec81911706ca4c82c376868bcb61225d1561b4abfb65b1\",\"dweb:/ipfs/QmUTtRM8vtA5DhhFmbsDstSbwE9verkLdGrw9W4wKPsZMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "operators.sol:local",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							}
						],
						"types": {
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n --> operators.sol:7:41:\n  |\n7 |    function getA()  public view returns(bool){ \n  |                                         ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 155,
					"file": "operators.sol",
					"start": 151
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> operators.sol:10:8:\n   |\n10 |        bool d;\n   |        ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 205,
					"file": "operators.sol",
					"start": 199
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> operators.sol:11:8:\n   |\n11 |        bool e;\n   |        ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 221,
					"file": "operators.sol",
					"start": 215
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> operators.sol:12:8:\n   |\n12 |        bool f;\n   |        ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 237,
					"file": "operators.sol",
					"start": 231
				},
				"type": "Warning"
			}
		],
		"sources": {
			"operators.sol": {
				"ast": {
					"absolutePath": "operators.sol",
					"exportedSymbols": {
						"local": [
							55
						]
					},
					"id": 56,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.5",
								".0",
								"<=",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "local",
							"nameLocation": "84:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dbe671f",
									"id": 3,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "107:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 55,
									"src": "96:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "96:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "156:208:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "172:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "167:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 8,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "167:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"nodeType": "VariableDeclarationStatement",
												"src": "167:6:0"
											},
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "188:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "183:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 11,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 13,
												"nodeType": "VariableDeclarationStatement",
												"src": "183:6:0"
											},
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "204:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "199:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 14,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "199:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"nodeType": "VariableDeclarationStatement",
												"src": "199:6:0"
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "e",
														"nameLocation": "220:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "215:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"nodeType": "VariableDeclarationStatement",
												"src": "215:6:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "f",
														"nameLocation": "236:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "231:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 20,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"nodeType": "VariableDeclarationStatement",
												"src": "231:6:0"
											},
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "g",
														"nameLocation": "252:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "247:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 23,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"nodeType": "VariableDeclarationStatement",
												"src": "247:6:0"
											},
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "h",
														"nameLocation": "268:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 53,
														"src": "263:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 26,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 28,
												"nodeType": "VariableDeclarationStatement",
												"src": "263:6:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "283:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "32",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "283:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "279:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "279:9:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "298:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "34",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "34",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "307:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "302:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "298:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "298:10:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "318:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "34",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "37",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "327:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "318:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "318:10:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "h",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "338:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "34",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "342:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "34",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "347:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "342:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "338:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "338:10:0"
											}
										]
									},
									"functionSelector": "d46300fd",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getA",
									"nameLocation": "123:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "127:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "151:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:6:0"
									},
									"scope": 55,
									"src": "114:250:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 56,
							"src": "75:292:0",
							"usedErrors": []
						}
					],
					"src": "39:328:0"
				},
				"id": 0
			}
		}
	}
}